"""Agregar tabla UnidadMedida

Revision ID: 4c7694b5a1be
Revises: dd33f5acebff
Create Date: 2025-05-23 03:41:38.744820

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '4c7694b5a1be'
down_revision = 'dd33f5acebff'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('estado_solicitud',
    sa.Column('id_nombre', sa.Integer(), nullable=False),
    sa.Column('nombre', sa.String(length=50), nullable=False),
    sa.PrimaryKeyConstraint('id_nombre')
    )
    op.create_table('estados_compra',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('nombre', sa.String(length=50), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('mensajes',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('usuario_id', sa.Integer(), nullable=False),
    sa.Column('mensaje', sa.Text(), nullable=False),
    sa.Column('fecha_envio', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('unidades_medida',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('nombre', sa.String(length=50), nullable=False),
    sa.Column('abreviatura', sa.String(length=10), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('bodega',
    sa.Column('id_material', sa.Integer(), nullable=False),
    sa.Column('cantidad', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['id_material'], ['materiales.id'], ),
    sa.PrimaryKeyConstraint('id_material')
    )
    op.create_table('inventario',
    sa.Column('id_inventario', sa.Integer(), nullable=False),
    sa.Column('id_material', sa.Integer(), nullable=False),
    sa.Column('id_zona', sa.Integer(), nullable=False),
    sa.Column('cantidad', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['id_material'], ['materiales.id'], ),
    sa.ForeignKeyConstraint(['id_zona'], ['zonas_trabajo.id'], ),
    sa.PrimaryKeyConstraint('id_inventario')
    )
    op.create_table('orden_compra',
    sa.Column('id_orden', sa.Integer(), nullable=False),
    sa.Column('fecha', sa.DateTime(), nullable=False),
    sa.Column('id_material', sa.Integer(), nullable=False),
    sa.Column('cantidad', sa.Integer(), nullable=False),
    sa.Column('es_material_nuevo', sa.Boolean(), nullable=False),
    sa.Column('nombre', sa.String(length=100), nullable=True),
    sa.Column('id_estado', sa.Integer(), nullable=False),
    sa.Column('usuario_solicitante', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['id_estado'], ['estados_compra.id'], ),
    sa.ForeignKeyConstraint(['id_material'], ['materiales.id'], ),
    sa.ForeignKeyConstraint(['usuario_solicitante'], ['usuarios.id'], ),
    sa.PrimaryKeyConstraint('id_orden')
    )
    with op.batch_alter_table('materiales', schema=None) as batch_op:
        batch_op.add_column(sa.Column('id_unidad', sa.Integer(), nullable=False))
        batch_op.drop_constraint('materiales_id_zona_fkey', type_='foreignkey')
        batch_op.create_foreign_key(None, 'unidades_medida', ['id_unidad'], ['id'])
        batch_op.drop_column('unidad_medida')
        batch_op.drop_column('id_zona')
        batch_op.drop_column('cantidad_disponible')

    with op.batch_alter_table('solicitudes_material', schema=None) as batch_op:
        batch_op.add_column(sa.Column('id_solicitud', sa.Integer(), nullable=False))
        batch_op.add_column(sa.Column('es_nuevo', sa.Boolean(), nullable=False))
        batch_op.add_column(sa.Column('id_material', sa.Integer(), nullable=True))
        batch_op.add_column(sa.Column('nombre_material', sa.String(length=100), nullable=True))
        batch_op.add_column(sa.Column('id_estado', sa.Integer(), nullable=False))
        batch_op.drop_constraint('solicitudes_material_id_zona_fkey', type_='foreignkey')
        batch_op.drop_constraint('solicitudes_material_trabajador_id_fkey', type_='foreignkey')
        batch_op.create_foreign_key(None, 'materiales', ['id_material'], ['id'])
        batch_op.create_foreign_key(None, 'estado_solicitud', ['id_estado'], ['id_nombre'])
        batch_op.drop_column('trabajador_id')
        batch_op.drop_column('nombre')
        batch_op.drop_column('cantidad_pendiente')
        batch_op.drop_column('estado')
        batch_op.drop_column('id_zona')
        batch_op.drop_column('id')

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('solicitudes_material', schema=None) as batch_op:
        batch_op.add_column(sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False))
        batch_op.add_column(sa.Column('id_zona', sa.INTEGER(), autoincrement=False, nullable=False))
        batch_op.add_column(sa.Column('estado', postgresql.ENUM('Pendiente', 'Aprobado', 'Rechazado', 'Aprobado Parcialmente', name='estadoenum'), autoincrement=False, nullable=False))
        batch_op.add_column(sa.Column('cantidad_pendiente', sa.INTEGER(), autoincrement=False, nullable=False))
        batch_op.add_column(sa.Column('nombre', sa.VARCHAR(length=100), autoincrement=False, nullable=False))
        batch_op.add_column(sa.Column('trabajador_id', sa.INTEGER(), autoincrement=False, nullable=False))
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key('solicitudes_material_trabajador_id_fkey', 'usuarios', ['trabajador_id'], ['id'])
        batch_op.create_foreign_key('solicitudes_material_id_zona_fkey', 'zonas_trabajo', ['id_zona'], ['id'])
        batch_op.drop_column('id_estado')
        batch_op.drop_column('nombre_material')
        batch_op.drop_column('id_material')
        batch_op.drop_column('es_nuevo')
        batch_op.drop_column('id_solicitud')

    with op.batch_alter_table('materiales', schema=None) as batch_op:
        batch_op.add_column(sa.Column('cantidad_disponible', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=False))
        batch_op.add_column(sa.Column('id_zona', sa.INTEGER(), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('unidad_medida', sa.VARCHAR(length=20), autoincrement=False, nullable=False))
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key('materiales_id_zona_fkey', 'zonas_trabajo', ['id_zona'], ['id'], ondelete='SET NULL')
        batch_op.drop_column('id_unidad')

    op.drop_table('orden_compra')
    op.drop_table('inventario')
    op.drop_table('bodega')
    op.drop_table('unidades_medida')
    op.drop_table('mensajes')
    op.drop_table('estados_compra')
    op.drop_table('estado_solicitud')
    # ### end Alembic commands ###
