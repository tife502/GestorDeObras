"""Agregar modelo Usuario

Revision ID: 96c180341ead
Revises: 76e00e4022b1
Create Date: 2025-05-08 16:11:25.601218

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '96c180341ead'
down_revision = '76e00e4022b1'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('reportes',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('tipo', sa.String(length=100), nullable=False),
    sa.Column('contenido', sa.Text(), nullable=False),
    sa.Column('fecha_creacion', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('zonas_trabajo',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('nombre', sa.String(length=100), nullable=False),
    sa.Column('descripcion', sa.Text(), nullable=True),
    sa.Column('ubicacion', sa.String(length=255), nullable=True),
    sa.Column('finalizada', sa.Boolean(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('materiales',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('nombre', sa.String(length=100), nullable=False),
    sa.Column('cantidad_disponible', sa.Integer(), nullable=False),
    sa.Column('id_zona', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['id_zona'], ['zonas_trabajo.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('solicitudes_material',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('trabajador_id', sa.Integer(), nullable=False),
    sa.Column('cantidad', sa.Integer(), nullable=False),
    sa.Column('cantidad_pendiente', sa.Integer(), nullable=False),
    sa.Column('id_zona', sa.Integer(), nullable=False),
    sa.Column('nombre', sa.String(length=100), nullable=False),
    sa.Column('estado', sa.String(length=50), nullable=False),
    sa.Column('fecha_solicitud', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['id_zona'], ['zonas_trabajo.id'], ),
    sa.ForeignKeyConstraint(['trabajador_id'], ['usuarios.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('tareas',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('descripcion', sa.String(length=100), nullable=False),
    sa.Column('estado', sa.String(length=50), nullable=True),
    sa.Column('trabajador_id', sa.Integer(), nullable=False),
    sa.Column('evidencia', sa.Text(), nullable=True),
    sa.Column('id_zona', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['id_zona'], ['zonas_trabajo.id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['trabajador_id'], ['usuarios.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.drop_table('reporte')
    op.drop_table('solicitud_material')
    op.drop_table('material')
    op.drop_table('tarea')
    op.drop_table('zona_trabajo')
    with op.batch_alter_table('asistencia', schema=None) as batch_op:
        batch_op.drop_constraint('asistencia_trabajador_id_fkey', type_='foreignkey')
        batch_op.create_foreign_key(None, 'usuarios', ['trabajador_id'], ['id'], ondelete='CASCADE')

    with op.batch_alter_table('roles', schema=None) as batch_op:
        batch_op.add_column(sa.Column('nombrerol', sa.String(length=50), nullable=False))
        batch_op.drop_constraint('rol_nombre_key', type_='unique')
        batch_op.create_unique_constraint(None, ['nombrerol'])
        batch_op.drop_column('nombre')

    with op.batch_alter_table('usuarios', schema=None) as batch_op:
        batch_op.add_column(sa.Column('intentos_fallidos', sa.Integer(), nullable=True))
        batch_op.add_column(sa.Column('bloqueado_hasta', sa.DateTime(), nullable=True))
        batch_op.add_column(sa.Column('activo', sa.Boolean(), nullable=True))
        batch_op.add_column(sa.Column('id_zona', sa.Integer(), nullable=True))
        batch_op.drop_constraint('usuarios_rol_id_fkey', type_='foreignkey')
        batch_op.create_foreign_key(None, 'zonas_trabajo', ['id_zona'], ['id'], ondelete='SET NULL')
        batch_op.create_foreign_key(None, 'roles', ['rol_id'], ['id'], ondelete='CASCADE')

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('usuarios', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key('usuarios_rol_id_fkey', 'roles', ['rol_id'], ['id'])
        batch_op.drop_column('id_zona')
        batch_op.drop_column('activo')
        batch_op.drop_column('bloqueado_hasta')
        batch_op.drop_column('intentos_fallidos')

    with op.batch_alter_table('roles', schema=None) as batch_op:
        batch_op.add_column(sa.Column('nombre', sa.VARCHAR(length=50), autoincrement=False, nullable=False))
        batch_op.drop_constraint(None, type_='unique')
        batch_op.create_unique_constraint('rol_nombre_key', ['nombre'])
        batch_op.drop_column('nombrerol')

    with op.batch_alter_table('asistencia', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key('asistencia_trabajador_id_fkey', 'usuarios', ['trabajador_id'], ['id'])

    op.create_table('zona_trabajo',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('zona_trabajo_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('nombre', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('descripcion', sa.TEXT(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='zona_trabajo_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('tarea',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('descripcion', sa.VARCHAR(length=200), autoincrement=False, nullable=False),
    sa.Column('estado', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('trabajador_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('zona_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['trabajador_id'], ['usuarios.id'], name='tarea_trabajador_id_fkey'),
    sa.ForeignKeyConstraint(['zona_id'], ['zona_trabajo.id'], name='tarea_zona_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='tarea_pkey')
    )
    op.create_table('material',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('material_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('nombre', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('cantidad_disponible', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='material_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('solicitud_material',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('trabajador_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('material_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('cantidad', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('estado', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('fecha_solicitud', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['material_id'], ['material.id'], name='solicitud_material_material_id_fkey'),
    sa.ForeignKeyConstraint(['trabajador_id'], ['usuarios.id'], name='solicitud_material_trabajador_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='solicitud_material_pkey')
    )
    op.create_table('reporte',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('tipo', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('contenido', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('fecha_creacion', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='reporte_pkey')
    )
    op.drop_table('tareas')
    op.drop_table('solicitudes_material')
    op.drop_table('materiales')
    op.drop_table('zonas_trabajo')
    op.drop_table('reportes')
    # ### end Alembic commands ###
